#!/usr/bin/env node

var parse = require('..'),
  colors = require('colors'),
  pkg = require('../package.json');

var argv = require('optimist')
  .usage([
    pkg.description,
    '',
    Object.keys(pkg.bin)[0] + ' [OPTION] [INPUTFILE]...'
  ].join('\n'))
  .alias({
    'k': 'keyword',
    'o': 'output',
    'V': 'version',
    'D': 'directory'
  })
  .describe({
    'directory': 'add directory to list for input files search',
    'output': 'write output to specified file',
    'from-code': 'encoding of input files',
    'keyword': 'additional keyword to be looked for',
    'force-po': 'write PO file even if empty',
    'version': 'output version information and exit'
  })
  .default({
    'from-code': 'ascii',
    'keyword': ['gettext', '_', '_n'],
    'force-po': false
  })
  .check(function (argv) {
    argv['from-code'] = argv['from-code'].toLowerCase().replace(/\W/g, '');
    if (['utf8', 'ascii', 'base64'].indexOf(argv['from-code']) < 0) {
      throw 'Encoding of input files must be either utf8, ascii or base64.'.red;
    }
    if (!argv._ && !argv['files-from'] && !argv.directory) {
      throw 'No input specified.'.red;
    }
  })
  .argv;

if (argv.version) {
  console.log(pkg.version);
  process.exit();
}

input = argv._;
delete argv._;

parse(input, argv, function (po) {
  if (po) {
    process.stdout.write(po);
  }
});
